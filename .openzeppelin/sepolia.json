{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x53B747e5c8C3A348b8f8444566755E195e9ADe16",
      "txHash": "0xdb96addc11d65d468218b8eaa0738f0a0cee2cad52d440009a776097073aa3e4",
      "kind": "transparent"
    },
    {
      "address": "0x198228c6bf941B5486f7e7aF72d0B820FC8e4674",
      "txHash": "0xfe2c9abd180fb40eec72c99f28c182ebac4053907f1072323f753a4a86d5cfca",
      "kind": "transparent"
    }
  ],
  "impls": {
    "06d1146513c1be103fb2baa913f46e438959d890fc766e4a5d6c95bd61dffb27": {
      "address": "0x25e17e1E18e10d336E75984dAC8FBbB986031817",
      "txHash": "0xac837bd4e5ec468c990b8cedd47b1a82ecc2aba5bdf816a470f179671ba1c000",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "mintBudget",
            "offset": 0,
            "slot": "0",
            "type": "t_uint112",
            "contract": "MToken",
            "src": "contracts/MToken.sol:13"
          },
          {
            "label": "delay",
            "offset": 14,
            "slot": "0",
            "type": "t_uint64",
            "contract": "MToken",
            "src": "contracts/MToken.sol:16"
          },
          {
            "label": "nextDelay",
            "offset": 22,
            "slot": "0",
            "type": "t_uint64",
            "contract": "MToken",
            "src": "contracts/MToken.sol:17"
          },
          {
            "label": "etNextDelay",
            "offset": 0,
            "slot": "1",
            "type": "t_uint64",
            "contract": "MToken",
            "src": "contracts/MToken.sol:18"
          },
          {
            "label": "operator",
            "offset": 8,
            "slot": "1",
            "type": "t_address",
            "contract": "MToken",
            "src": "contracts/MToken.sol:21"
          },
          {
            "label": "nextOperator",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "MToken",
            "src": "contracts/MToken.sol:22"
          },
          {
            "label": "etNextOperator",
            "offset": 20,
            "slot": "2",
            "type": "t_uint64",
            "contract": "MToken",
            "src": "contracts/MToken.sol:23"
          },
          {
            "label": "revoker",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "MToken",
            "src": "contracts/MToken.sol:26"
          },
          {
            "label": "nextRevoker",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "MToken",
            "src": "contracts/MToken.sol:27"
          },
          {
            "label": "etNextRevoker",
            "offset": 20,
            "slot": "4",
            "type": "t_uint64",
            "contract": "MToken",
            "src": "contracts/MToken.sol:28"
          },
          {
            "label": "requestMap",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "MToken",
            "src": "contracts/MToken.sol:31"
          },
          {
            "label": "messager",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "MToken",
            "src": "contracts/MToken.sol:34"
          },
          {
            "label": "nextMessager",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "MToken",
            "src": "contracts/MToken.sol:35"
          },
          {
            "label": "etNextMessager",
            "offset": 20,
            "slot": "7",
            "type": "t_uint64",
            "contract": "MToken",
            "src": "contracts/MToken.sol:36"
          },
          {
            "label": "nftContract",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "MToken",
            "src": "contracts/MToken.sol:39"
          },
          {
            "label": "isBlocked",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MToken",
            "src": "contracts/MToken.sol:42"
          },
          {
            "label": "disableCcSend",
            "offset": 0,
            "slot": "10",
            "type": "t_bool",
            "contract": "MToken",
            "src": "contracts/MToken.sol:44"
          },
          {
            "label": "usedReserve",
            "offset": 1,
            "slot": "10",
            "type": "t_uint112",
            "contract": "MTokenMain",
            "src": "contracts/MTokenMain.sol:10"
          },
          {
            "label": "reserveFeed",
            "offset": 0,
            "slot": "11",
            "type": "t_address",
            "contract": "MTokenMain",
            "src": "contracts/MTokenMain.sol:13"
          },
          {
            "label": "nextReserveFeed",
            "offset": 0,
            "slot": "12",
            "type": "t_address",
            "contract": "MTokenMain",
            "src": "contracts/MTokenMain.sol:14"
          },
          {
            "label": "etNextReserveFeed",
            "offset": 20,
            "slot": "12",
            "type": "t_uint64",
            "contract": "MTokenMain",
            "src": "contracts/MTokenMain.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)709_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC20Storage)341_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)260_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(NoncesStorage)657_storage": {
            "label": "struct NoncesUpgradeable.NoncesStorage",
            "members": [
              {
                "label": "_nonces",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)209_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint112": {
            "label": "uint112",
            "numberOfBytes": "14"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Nonces": [
            {
              "contract": "NoncesUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol:17",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "75cde469b6c99e28dbd0029d17f01408d7bf53b48cee6bc1f2d0aa2840ce63c4": {
      "address": "0x4954B83C66674713251638dd7b99D8c926e2325B",
      "txHash": "0xe17410d5716f85563843269d60995fa323a4226cc6387d2e25188d1808d429f7",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "mtokenContract",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "BullionNFT",
            "src": "contracts/BullionNFT.sol:17"
          },
          {
            "label": "packedCoins",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "BullionNFT",
            "src": "contracts/BullionNFT.sol:19"
          },
          {
            "label": "isLocked",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "BullionNFT",
            "src": "contracts/BullionNFT.sol:22"
          },
          {
            "label": "baseURI",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage",
            "contract": "BullionNFT",
            "src": "contracts/BullionNFT.sol:24"
          },
          {
            "label": "packSigner",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "BullionNFT",
            "src": "contracts/BullionNFT.sol:27"
          },
          {
            "label": "nextPackSigner",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "BullionNFT",
            "src": "contracts/BullionNFT.sol:28"
          },
          {
            "label": "etNextPackSigner",
            "offset": 20,
            "slot": "5",
            "type": "t_uint64",
            "contract": "BullionNFT",
            "src": "contracts/BullionNFT.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)709_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)513_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)260_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)209_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
